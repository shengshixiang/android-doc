# README

高通平台,abl阶段配置gpio

# 原理

* 在XBL中已经实现了PMIC_GPIO的驱动，源代码位于 QcomPkg/Drivers/PmicDxe/PmicGpioProtocol.c

* 在 ABL (edk2) 可以使用XBL中的驱动协议接口，通过 PmicGpioProtocolGuid 找到它

# 提交记录

```
commit 7c452c225a93eed2cd039630c16ac6024efebcbd
Author: starmenxie <starmenxie@hotmail.com>
Date:   Fri Nov 18 09:04:33 2022 +0000

    [Title]:配置pmu_gpio07为sp的power脚
    

M       A6650_Unpacking_Tool/BOOT.XF.4.1/boot_images/QcomPkg/Library/PmicLib/target/Agatti_pmCocos/system/src/pm_sbl_boot_oem.c
A       UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Include/PmicIrq.h
A       UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Include/Protocol/EFIPmicGpio.h
M       UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/paxLib/paxLib.inf
M       UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/paxLib/pax_serial.c
M       UM.9.15/bootable/bootloader/edk2/QcomModulePkg/QcomModulePkg.dec
```

# 方法

* 在edk2 里面没有PmicGpioProtocol的接口, 首先将XBL的头文件copy到edk2中的相应目录中

    * boot_images/QcomPkg/Include/Protocol/EFIPmicGpio.h

    * bootable/bootloader/edk2/QcomModulePkg/Include/Protocol/EFIPmicGpio.h

    * boot_images/QcomPkg/Include/PmicIrq.h

    * bootable/bootloader/edk2/QcomModulePkg/Include/PmicIrq.h

* 把pmu_配置成 1.8v输出

    * PM_GPIO_VIN1 是1.8

    * PM_GPIO_VIN0 是4.2

```
--- a/A6650_Unpacking_Tool/BOOT.XF.4.1/boot_images/QcomPkg/Library/PmicLib/target/Agatti_pmCocos/system/src/pm_sbl_boot_oem.c
+++ b/A6650_Unpacking_Tool/BOOT.XF.4.1/boot_images/QcomPkg/Library/PmicLib/target/Agatti_pmCocos/system/src/pm_sbl_boot_oem.c
@@ -183,7 +183,9 @@ pm_driver_post_init ( void )
err_flag |= pm_comm_write_byte(0, 0x7042, 0xE5, 0);
err_flag |= pm_comm_write_byte(0, 0x7043, 0x0B, 0);

-  pm_gpio_config_digital_output (0, PM_GPIO_7, PM_GPIO_OUT_BUFFER_CONFIG_CMOS, PM_GPIO_VIN0, PM_GPIO_SOURCE_GND, PM_GPIO_OUT_BUFFER_LOW, 1);
+//[feature]-add-begin starmenxie@hotmail.com 20221117,for V02 mainboard,PM_GPIO_7 control sp power
+  pm_gpio_config_digital_output (0, PM_GPIO_7, PM_GPIO_OUT_BUFFER_CONFIG_CMOS, PM_GPIO_VIN1, PM_GPIO_SOURCE_GND, PM_GPIO_OUT_BUFFER_LOW, 0);
+//[feature]-add-end starmenxie@hotmail.com 20221117,for V02 mainboard,PM_GPIO_7 control sp power
    ```

* 其他标准修改

```
--- a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/paxLib/paxLib.inf
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/paxLib/paxLib.inf
@@ -74,3 +74,4 @@
[Protocols]
    gEfiTLMMProtocolGuid
    gEfiPartitionRecordGuid
+   gQcomPmicGpioProtocolGuid
```

```
--- a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/paxLib/pax_serial.c
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/paxLib/pax_serial.c
@@ -3,6 +3,7 @@
 #include "pax_serial.h"
 #include <Protocol/HSerial.h>
 #include <Library/Uart.h>
+#include <Protocol/EFIPmicGpio.h>
 
 //#define SP_UART_DEBUG
 
@@ -74,13 +75,30 @@ void pax_sp_reset(void)
 {
        EFI_STATUS Status = EFI_SUCCESS;
        EFI_TLMM_PROTOCOL *TLMMProtocol = NULL;
+    EFI_QCOM_PMIC_GPIO_PROTOCOL *PmicGpioProtocol = NULL;
 
        Status = gBS->LocateProtocol(&gEfiTLMMProtocolGuid, NULL, (void**)&TLMMProtocol);
        if (Status != EFI_SUCCESS)
                return;
 
-       //TLMMProtocol->ConfigGpio((UINT32)EFI_GPIO_CFG(92, 0, GPIO_OUTPUT, GPIO_PULL_UP, GPIO_8MA), TLMM_GPIO_ENABLE);
-       //TLMMProtocol->GpioOut((UINT32)EFI_GPIO_CFG(92, 0, GPIO_OUTPUT, GPIO_NO_PULL, GPIO_8MA), GPIO_HIGH_VALUE);
+    //arg 1: PMIC Index, first PMIC (PM8998) index=0
+    //arg 2: GPIO, set to GPIO4
+    //arg 3: voltage source
+    //arg 4: Logic source: GND for general purpose
+    //arg 5: Buffer strength MEDIUM
+    //arg 6: Invert output or not. TRUE = invert GND signal
+    Status = gBS->LocateProtocol(&gQcomPmicGpioProtocolGuid, NULL,(VOID**)&PmicGpioProtocol);
+    if (Status != EFI_SUCCESS)
+        return;
+
+    PmicGpioProtocol->ConfigDigitalOutput(
    +        0,
+        EFI_PM_GPIO_7, // GPIO 号
+        EFI_PM_GPIO_OUT_BUFFER_CONFIG_CMOS,
+        EFI_PM_GPIO_VIN1,
+        EFI_PM_GPIO_SOURCE_GND,
+        EFI_PM_GPIO_OUT_BUFFER_MEDIUM,
+        TRUE); // TRUE 为高电平, FALSE 为低电平
 
        TLMMProtocol->ConfigGpio((UINT32)EFI_GPIO_CFG(32, 0, GPIO_OUTPUT, GPIO_PULL_UP, GPIO_8MA), TLMM_GPIO_ENABLE);
```

```
--- a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/QcomModulePkg.dec
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/QcomModulePkg.dec
@@ -149,6 +149,8 @@
 
   gEfiTLMMProtocolGuid =                { 0xad9aec18, 0x7bf0, 0x4809, { 0x9e, 0x96, 0x30, 0x12, 0x30, 0x9f, 0x3d, 0xf7 } }
   gQcomI2CProtocolGuid =                { 0xb27ae8b1, 0x3e10, 0x4d07, { 0xab, 0x5c, 0xeb, 0x9a, 0x6d, 0xc6, 0xfa, 0x8f } }
+  # PMIC GPIO
+  gQcomPmicGpioProtocolGuid =           { 0x60759b13, 0xa8bf, 0x46fe, { 0xb7, 0xe6, 0x79, 0x7b, 0xfb, 0x33, 0x5d, 0xf3 } }
 
 [PcdsFixedAtBuild.common]
```
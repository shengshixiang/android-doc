# temp

https://blog.csdn.net/whitefish520/article/details/106763476?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167403584916800192249817%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=167403584916800192249817&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-11-106763476-null-null.article_score_rank_blog&utm_term=USB&spm=1018.2226.3001.4450

# usb

* usb 图标

![0004_0001.png](images/0004_0001.png)

* usb接口名字

![0004_0002.png](images/0004_0002.png)

* type-c 接口线定义

![0004_0003.png](images/0004_0003.png)

* type-c 接口线定义2

![0004_0004.png](images/0004_0004.png)

* microusb接口线定义

![0004_0005.png](images/0004_0005.png)

* microusb otg线 内部原理图

    > 左边接口手机,手机检测  id脚拉到地, 切换成host模式
    > 手机id脚 默认拉高,做device模式
    > 电脑id脚也是拉低,host模式

![0004_0006.png](images/0004_0006.png)

# usb 是什么

Universal serial bus,通用串行总线

# usb解决什么问题

简化与外设的易用性,努力做到接口统一,并且支持热插拔

# usb otg

由于usb是主从模式,两个主机,两个从机无法通信.所以提出otg(on the go),允许设备在不同情况下主从切换

# usb 速度

## usb 1.0,usb 1.1

支持低速1.5Mbps,全速 12Mbps

## usb 2.0

高速模式,480Mbps,高速模式是可选的，不一定所有USB芯片都支持

## usb 3.0

5.0 Gbps

## usb 4.0

40Gbps,兼容雷电3,雷电4协议,并向后兼容 USB 3.2 和 USB 2.0

## usb 4.0 V2

80Gbps

![0004_0007.png](images/0004_0007.png)

# usb 拓扑结构

usb是主从模式,主机叫host,从机叫device.

一个主机有一个或者多个主控制器(host controller)和根集线器(root hub).

主控制器 负责数据处理,根集线器提供一个连接主控制器与device的接口与通路.

usb集线器(usb hub)可以对原有的usb口在数量上拓展,但不增加带宽,所以usb可以层层拓展,但 总数量有限.

![0004_0008.png](images/0004_0008.png)

# usb 电气特性

usb 2.0 4根线,vcc,D+,D1,gnd

otg 多一根线,id脚,用于判断主从

usb 2.0 三种传输速度,低速,1.5Mbps,全速12Mpbs,高速480Mbps

# usb 插入检测

主机端:D+,D- 15K电阻下拉到地,

从机端:D+,D-接1.5K 电阻上拉,具体接D+,D-,由速度决定

D+:全速,高速

D-:低速

当从机接入主机后,D-或者D+就会分压,主机检测到 D+,D- 电平变化,知道有设备插入

# usb描述符

usb主机如何知道usb设备的功能?

通过设备的描述符,描述符中,记录了设备的类型,厂商id等.

在主机获取描述符时，首先获取设备描述符，接着获取配置描述符.

然后根据配置描述符中的配置集合的总长度，一次将配置描述符、接口描述符、类特殊描述符、端点描述符一次读回，对于字符串描述符则是单独获取的

* 设备描述符(Device Discriptor)

    一个usb设备,只有一个设备描述符.设备描述符描述了该设备有多少配置,每种配置对应一个配置描述符.

    设备描述符主要描述信息,USB协议版本号、设备类型、端点0的最大包大小、厂商ID、产品ID、设备版本号、厂商字符串、产品字符串、设备序列号、可能的配置数等

* 配置描述符(configuration descriptor)

    每个配置描述符中，定义了该配置里有多少个接口，每个接口对应一个接口描述符

    配置描述符主要记录的信息：配置所含接口数，配置的编号、供电方式、是否支持远程唤醒、电流需求等

* 接口描述符(interface descriptor)

    接口描述符里定义了该接口有多少个端点，每个端点对应一个端点描述符

    接口描述符主要记录的信息：接口的编号、接口的端点数、接口所使用的类、子类、协议

* 端点描述符(endpoint descriptor)

    端点描述符定义了端点的大小、类型等

    端点描述符主要记录的信息：端点号及方向、端点的传输类型、最大包长度、查询时间间隔等

* 字符串描述符(string descriptor)

    提供一些方便人们阅读的信息，它不是必须的

# USB设备的枚举过程

* 枚举：从设备读取各种描述符信息

    USB主机检测到USB设备插入后，进行枚举，根据获取的信息，加载合适的驱动程序

* 控制传输

    在设备的枚举过程中，使用控制传输，控制传输分为三个过程：建立过程、可选的数据过程、状态过程

    * 建立过程：它开始于一个setup令牌包，后面紧跟一个data0数据包，后面就是数据过程

    * 数据过程：输入数据或者输出数据，数据过程后是状态过程

    * 状态过程：与数据过程相反，是输出数据或者输入数据，用来确认所有的数据是否都已经正确传输完成

* 枚举的详细过程

    * 主机检测到设备插入，对设备复位

        设备复位后地址为0，主机通过0地址和刚插入的设备通信，主机往0地址的设备的端点0发送获取设备描述符的标准请求（这是一个标准传输的建立过程），设备收到请求后，返回设备描述符给主机（8字节），主机收到设备描述符确认无误后，返回一个0长度的确认数据包给设备，进入设置地址阶段

    * 主机再次对设备复位，设置地址

        再一次复位后，进入设置地址阶段，USB主机往0地址的设备端点0发出一个设置地址的请求（控制传输的建立过程），新的设备地址在建立过程的数据包中，因此没有数据过程，具体的地址由USB主机管理，分配一个唯一的地址给刚接入的设备。USB设备在接收到请求后，就进入状态过程，主机会再次发送一个请求状态返回，这时USB设备返回0长度的状态数据包，主机收到后，经过确认，发送应答包ACK给USB设备，设备收到ACK后，启用新的设备地址

    * 主机再次获得设备描述符

        主机使用新设置的地址访问USB设备，这次获取全部的18字节的设备描述符

    * 主机获取配置描述符

        配置描述符共9个字节，主机获取到配置描述符后，根据配置描述符中所描述的配置集合总长度，获取配置集合。
        配置集合包括配置描述符、接口描述符、类特殊描述符、端点描述符等

    * 获取字符串描述符

        如果有字符串描述符的话，可以获取这个

